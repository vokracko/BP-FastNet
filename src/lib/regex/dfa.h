#include "common.h"
#include <strings.h>
#include <limits.h>

enum SYMBOLS
{
	QUESTION_MARK = 300,
	STAR,
	PLUS, // 302
	OPEN_PAREN,
	CLOSE_PAREN, // 304
	OPEN_BRACKET,
	CLOSE_BRACKET, // 306
	OR,
	SYMBOL, // 308
	STACK_BOTTOM,
	END, // 310
	CONCAT,
	START, // 312
	DOT
};

enum
{
	FAIL,
	SHIFT,
	REDUCE,
	EQUAL,
	FIN,
	OK
};

#define EPSILON 400
#define ID_NONE 0
#define NOT_MATCH -1
#define _DFA_CLEAR(free_dfa_states) _dfa_clear(root, nfa_list, move_states, pairs_created, closure_states, pairs_unprocessed, free_dfa_states)

short validation_table[11][13] =
{
	{FAIL,FAIL,FAIL,FAIL,OK,FAIL,OK,FAIL,OK,FAIL,FAIL,FAIL,FAIL},
	{FAIL,FAIL,FAIL,FAIL,OK,FAIL,OK,FAIL,OK,FAIL,FAIL,FAIL,FAIL},
	{FAIL,FAIL,FAIL,FAIL,OK,FAIL,OK,FAIL,OK,FAIL,FAIL,FAIL,FAIL},
	{CONCAT,CONCAT,CONCAT,OK,CONCAT,FAIL,CONCAT,OK,CONCAT,OK,FAIL,OK,OK},
	{OK,OK,OK,FAIL,OK,FAIL,OK,FAIL,OK,FAIL,FAIL,FAIL,FAIL},
	{CONCAT,CONCAT,CONCAT,OK,CONCAT,FAIL,CONCAT,OK,CONCAT,OK,FAIL,OK,OK},
	{FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL},
	{OK,OK,OK,FAIL,OK,FAIL,OK,OK,OK,FAIL,FAIL,FAIL,FAIL},
	{CONCAT,CONCAT,CONCAT,OK,CONCAT,OK,CONCAT,OK,CONCAT,OK,FAIL,OK,OK},
	{FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL},
	{OK,OK,OK,FAIL,OK,FAIL,OK,FAIL,OK,FAIL,FAIL,FAIL,FAIL}
};

char precedence_table[12][12] =
{
	{FAIL,FAIL,FAIL,SHIFT,FAIL,FAIL,FAIL,SHIFT,FAIL,SHIFT,FAIL,SHIFT},
	{FAIL,FAIL,FAIL,SHIFT,FAIL,FAIL,FAIL,SHIFT,FAIL,SHIFT,FAIL,SHIFT},
	{FAIL,FAIL,FAIL,SHIFT,FAIL,FAIL,FAIL,SHIFT,FAIL,SHIFT,FAIL,SHIFT},
	{FAIL,FAIL,FAIL,SHIFT,FAIL,FAIL,FAIL,SHIFT,FAIL,SHIFT,FAIL,SHIFT},
	{REDUCE,REDUCE,REDUCE,EQUAL,FAIL,FAIL,FAIL,REDUCE,FAIL,FAIL,FAIL,REDUCE},
	{FAIL,FAIL,FAIL,SHIFT,FAIL,FAIL,FAIL,SHIFT,FAIL,SHIFT,FAIL,SHIFT},
	{FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL},
	{REDUCE,REDUCE,REDUCE,SHIFT,FAIL,FAIL,FAIL,REDUCE,FAIL,SHIFT,FAIL,REDUCE},
	{FAIL,FAIL,FAIL,SHIFT,FAIL,FAIL,FAIL,SHIFT,FAIL,SHIFT,FAIL,SHIFT},
	{FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL},
	{REDUCE,REDUCE,REDUCE,FAIL,FAIL,FAIL,FAIL,REDUCE,FAIL,FIN,FAIL,REDUCE},
	{REDUCE,REDUCE,REDUCE,SHIFT,FAIL,FAIL,FAIL,SHIFT,FAIL,SHIFT,FAIL,REDUCE}
};

typedef struct
{
	_dfa_state * dfa_state;
	stack * nfa_states;
} _dfa_pair;
